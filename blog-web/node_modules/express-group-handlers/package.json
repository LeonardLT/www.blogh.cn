{
  "name": "express-group-handlers",
  "version": "0.1.1",
  "homepage": "https://github.com/tldrio/express-group-handlers",
  "author": {
    "name": "Louis Chatriot"
  },
  "contributors": [
    {
      "name": "Louis Chatriot"
    }
  ],
  "description": "Apply a middleware only to a group of route handlers in Express",
  "keywords": [
    "Express",
    "handlers",
    "group",
    "middleware"
  ],
  "dependencies": {
    "methods": "0.0.1"
  },
  "devDependencies": {
    "express": "3.0.0rc5",
    "request": "2.9.x",
    "chai": "1.0.x",
    "mocha": "1.4.x",
    "sinon": "1.3.x",
    "async": "~0.2.5",
    "underscore": "1.4.x"
  },
  "scripts": {
    "test": "make test"
  },
  "main": "index",
  "licence": "MIT",
  "readme": "Express Group Handlers\n======================\n\nApply a middleware before or after a group of route handlers in Express. No need to change your existing code, just call this function (see demos below).\n\n## Install and test\nThe usual:\n```bash\nnpm install express-group-handlers\nnpm test   # Be sure to install the dev dependencies if you want to test this module!\n```\n\n## Use\n```javascript\nvar express = require('express')\n  , app = express()\n  , groupHandlers = require('express-group-handlers');\n\ngroupHandlers.setup(app);\n\napp.get('/route1', finalHandler1);\napp.get('/route2', finalHandler2);\n\napp.beforeEach(groupHandler, function (app) {\n  app.get('/route3', finalHandler3); // GET /route3 will execute groupHandler, then finalHandler3\n  app.post('/route4', finalHandler4); // POST /route4 will execute groupHandler, then finalHandler4\n  // Note that the syntax is the same than for /route1 and /route2\n});\n\napp.listen(3000);\n```\n\nThe `groupHandlers.setup` function augments your Express app with two functions, `beforeEach` and `afterEach`. Both work the same way: you supply the middlewares you want to see executed before/after the handlers inside the callback. The callback has one parameter, which is a fake Express app with all router functions (`get`, `post`, `all` etc.). If you give it the same name as your real Express app (as in the example above), no need to change your existing code, just wrap the `beforeEach` function around it!\n\n```javascript\n// You can have multiple middlewares in beforeEach/afterEach\n// You can use arrays of middlewares too\napp.beforeEach(gh1, gh2, [gh3, gh4], ..., function (app) {\n  // Your routes here\n});\n\n// Alternate syntax if you don't want to augment your Express app\n// Just don't call groupHandlers.setup and use the functions directly like this\ngroupHandlers.beforeEach(app, groupHandler, function (app) {\n  // Your routes here\n});\n\n// Yodawg, I put a beforeEach inside your beforeEach!\napp.beforeEach(gh1, function (app) {\n  app.get('/route1', finalHandler1); // Executes gh1, then finalHandler1\n  app.get('/route2', finalHandler2); // Executes gh2, then finalHandler2\n  \n  app.beforeEach(gh2, function (app) {\n    app.get('/route3', finalHandler3); // gh1, gh2 then finalHandler3\n    app.get('/route4', finalHandler4); // gh1, gh2 then finalHandler4\n  });\n});\n```\n\nOf the above of course works with `afterEach`. Actually you can even nest `beforeEach` and `afterEach`.\n\n## License\n(The MIT License)\n\nCopyright (c) 2013 tldr.io &lt;hello@tldr.io&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "_id": "express-group-handlers@0.1.1",
  "_from": "express-group-handlers"
}
